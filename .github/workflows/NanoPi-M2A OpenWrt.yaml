#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 Jolly <https://totoro.site>
# 
# <https://github.com/skytotwo/NanoPi-R1S-Build-By-Actions>
#
# Write by Jolly 2019/12/7
# last update at 2020/3/19

name: NanoPi-M2A OpenWrt Build

on:
  push:
    branches: 
      - master
  schedule:
    - cron: '0 6 * * *'
  # release:
  #   types: [published]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master
          
      - name: Update Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get -y update
          sudo apt-get install -y wget
          sudo apt install python2 -y
          sudo rm -rf /usr/bin/python
          sudo ln -s /usr/bin/python2 /usr/bin/python
          
      - name: Install Repo
        run: |
          git clone https://github.com/nbnbnb/repo
          sudo cp repo/repo /usr/bin/
          
      - name: Download Source
        run: |
          mkdir friendlywrt-s5p4418
          cd friendlywrt-s5p4418
          repo init -u https://github.com/nbnbnb/friendlywrt_mainfests -b 19_07_1 -m s5p4418.xml --repo-url=https://github.com/friendlyarm/repo --no-clone-bundle
          repo sync -c --no-clone-bundle -j8

      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          wget -O - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | sudo bash     

          sudo apt-get install g++-9 -y
          sudo apt-get install gcc-9 -y
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 50 --slave /usr/bin/g++ g++ /usr/bin/g++-9

      - name: Build OpenWrt
        run: |     
          sudo apt install python2 -y
          sudo rm -rf /usr/bin/python
          sudo ln -s /usr/bin/python2 /usr/bin/python        
          cp s5p4418_config friendlywrt-s5p4418/friendlywrt/.config

          # Compile fail
          rm -rf friendlywrt-s5p4418/friendlywrt/package/network/services/hostapd
          
          # diy
          mkdir -p friendlywrt-s5p4418/friendlywrt/package/diy
          cd friendlywrt-s5p4418/friendlywrt/package/diy
          git clone https://github.com/nbnbnb/luci-app-vssr.git
          git clone https://github.com/nbnbnb/lua-maxminddb.git
                
          mkdir luci-app-openclash
          cd luci-app-openclash
          git init
          git remote add -f origin https://github.com/vernesong/OpenClash.git
          git config core.sparsecheckout true
          echo "luci-app-openclash" >> .git/info/sparse-checkout
          git pull --depth 1 origin master
          git branch --set-upstream-to=origin/master master
                                        
          # update patch
          cd ../../../tools/m4/patches
          wget https://raw.githubusercontent.com/keyfour/openwrt/2722d51c5cf6a296b8ecf7ae09e46690403a6c3d/tools/m4/patches/011-fix-sigstksz.patch

          cd ../../..
          
          echo "src-git helloworld https://github.com/fw876/helloworld.git" >> "feeds.conf.default"
          echo "src-git passwall https://github.com/xiaorouji/openwrt-passwall" >> "feeds.conf.default"
          
          #make defconfig
          #make download -j8
          #make -j1 V=s 
          
          ./scripts/feeds update packages
          rm -rf feeds/packages/lang/golang
          svn co https://github.com/openwrt/packages/branches/openwrt-22.03/lang/golang feeds/packages/lang/golang          

          cd ..
                   
          ./build.sh nanopi_m2a.mk
          
      - name: Zip Files
        run: |
          find friendlywrt-s5p4418/out/ -name "FriendlyWrt_*.img" | xargs -i zip -r {}.zip {}
          
      - name: Assemble Artifact
        id: assemble_artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find friendlywrt-s5p4418/out/ -name "FriendlyWrt_*img.zip*" | xargs -i mv -f {} ./artifact/
          cp friendlywrt-s5p4418/friendlywrt/.config ./artifact/
          zip -r artifact.zip ./artifact/
          release_tag="NanoPi-M2A-$(date +%Y-%m-%d)"
          echo "##[set-output name=release_tag;]$release_tag"
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.repo_access }}
        with:
          tag_name: ${{ steps.assemble_artifact.outputs.release_tag }}
          release_name: 自动发布 ${{ steps.assemble_artifact.outputs.release_tag }}
          draft: false
          prerelease: false
          
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.repo_access }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./artifact.zip
          asset_name: ${{ steps.assemble_artifact.outputs.release_tag }}-ROM.zip
          asset_content_type: application/zip          
